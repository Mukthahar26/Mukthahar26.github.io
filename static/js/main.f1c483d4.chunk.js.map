{"version":3,"sources":["components/page/index.js","components/navigation/index.js","components/link/index.js","App.js","serviceWorker.js","index.js"],"names":["sleep","ms","Promise","resolve","setTimeout","Page","props","state","shouldRenderChildren","this","eventer","register","move","unregister","left","window","innerWidth","from","setState","reRender","isVisible","style","width","height","position","top","transform","animationTimingFunction","zIndex","transition","children","Component","Navigation","document","documentElement","clientWidth","body","map","o","length","page","pages","MoveEvent","slice","i","fire","location","hash","onhashchange","e","newURL","indexOf","pageElements","React","Children","idx","element","cloneElement","path","listeners","f","push","splice","params","forEach","listener","Link","to","onClick","go","App","className","marginRight","Button","backgroundColor","Boolean","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","then","registration","catch","error","console","message"],"mappings":"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","file":"static/js/main.f1c483d4.chunk.js","sourcesContent":["\r\nimport React, { Component } from 'react';\r\n\r\nfunction sleep(ms) {\r\n    return new Promise(resolve => setTimeout(resolve, ms));\r\n}\r\n\r\nclass Page extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {shouldRenderChildren: true};\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.props.eventer.register(() => this.move());\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.props.eventer.unregister(() => this.move());\r\n    }\r\n\r\n    isVisible() {\r\n        if (this.props.left < 0) {\r\n            return false;\r\n        }\r\n        if (this.props.left >= window.innerWidth) {\r\n            return false;\r\n        }\r\n        return true;\r\n    }\r\n\r\n    move() {\r\n        if (this.props.left !== this.props.from) {\r\n            this.setState({ shouldRenderChildren: true });\r\n        }\r\n        this.reRender();\r\n    }\r\n\r\n    async reRender() {\r\n        await sleep(1000);\r\n        this.setState({shouldRenderChildren: this.isVisible()});\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div\r\n             style={{\r\n                width: '100vw', \r\n                height: '100%',\r\n                position: 'fixed',\r\n                top: 0,\r\n                left: 0,\r\n                transform: 'translateX('+ this.props.left + 'px)',\r\n                animationTimingFunction: 'ease-in',\r\n                zIndex: -20,\r\n                transition: 'transform .8s ease-in-out'\r\n            }}> {this.state.shouldRenderChildren &&\r\n                    this.props.children\r\n                 }\r\n            </div>\r\n        );\r\n\r\n    }\r\n\r\n}\r\n\r\nexport default Page;\r\n","import React, { Component } from 'react';\r\n\r\n\r\nclass Navigation extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.width = window.innerWidth || document.documentElement.clientWidth || document.body.clientWidth;\r\n        let left = props.children.map(o => this.width);\r\n        if (left.length > 0 ) {\r\n            left[0] = 0;\r\n        }\r\n        this.state = {page: 0, left: left, from: left};\r\n        this.pages = {};\r\n        this.eventer = new MoveEvent();\r\n    }\r\n\r\n    move(page) {\r\n        const left = this.state.left.slice();\r\n        const from = left.slice();\r\n        if (page >= left.length) {\r\n          page = 0;\r\n        }\r\n        for (let i = 0; i < left.length; i++ ) {\r\n          if (i < page) {\r\n            left[i] = -this.width;\r\n          } else if (i === page) {\r\n            left[i] = 0;\r\n          } else {\r\n            left[i] = this.width;\r\n          }\r\n        }    \r\n        this.setState({left: left, page: page, from: from});\r\n        this.eventer.fire();\r\n      }\r\n      \r\n    componentDidMount() {\r\n        this.move(this.pages[window.location.hash.slice(1)]);\r\n    }\r\n\r\n    componentWillMount() {\r\n        window.onhashchange = (e) => {\r\n            const i = e.newURL.indexOf('#');\r\n            const hash = e.newURL.slice(i + 1);\r\n            this.move(this.pages[hash]);\r\n            this.eventer.fire();\r\n        };\r\n    }\r\n\r\n\r\n    render() {\r\n        const pageElements = React.Children.map(this.props.children, (page, idx) => {\r\n            const element = React.cloneElement(page, { left: this.state.left[idx], from: this.state.from[idx], eventer:this.eventer }); \r\n            this.pages[element.props.path.slice(1)] = idx;\r\n            return element;\r\n        });\r\n        return (\r\n            <div>\r\n                {pageElements}\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\n\r\n\r\nclass MoveEvent {\r\n\r\n    constructor() {\r\n        this.listeners = [];\r\n    }\r\n\r\n    register(f) {\r\n        this.listeners.push(f);\r\n    }\r\n\r\n    unregister(f) {\r\n        this.listeners.splice(this.listeners.indexOf(f), 1);\r\n    }\r\n\r\n    fire(params) {\r\n        this.listeners.forEach((listener) => {\r\n            listener(params);\r\n        });\r\n\r\n    }\r\n}\r\n\r\nexport default Navigation;\r\n\r\n","import React, { Component } from 'react';\r\n\r\n\r\nclass Link extends Component {\r\n\r\n    go() {\r\n        window.location.hash = this.props.to.slice(1);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <i onClick={() => this.go()}>\r\n                {this.props.children}\r\n            </i>\r\n\r\n        );\r\n    }\r\n\r\n}\r\n\r\nexport default Link;","import React, { Component } from 'react';\r\nimport './App.css';\r\nimport Page from './components/page';\r\nimport Navigation from './components/navigation';\r\nimport Link from './components/link';\r\nimport {Button} from '@material-ui/core';\r\n\r\nclass App extends Component {\r\n\r\n  componentDidMount(){\r\n    window.location.hash = \"Home\";\r\n  }\r\n  render() {\r\n    return (\r\n      <div>\r\n        <div className=\"header\">\r\n          <div style={{marginRight: '40px'}}>\r\n          <Link to=\"/Home\" >\r\n            <Button className=\"nav-button\">Home</Button>\r\n          </Link>\r\n          <Link to=\"/red\" >\r\n            <Button className=\"nav-button\">red</Button>\r\n          </Link>\r\n          <Link to=\"/blue\" >\r\n            <Button className=\"nav-button\">blue</Button>\r\n          </Link>\r\n          <Link to=\"/brown\" >\r\n            <Button className=\"nav-button\">brown</Button>\r\n          </Link>\r\n          </div>\r\n        </div>\r\n        <Navigation>\r\n          <Page path=\"/Home\">\r\n            <div className=\"page\" style={{ backgroundColor: 'green' }}>\r\n              bla1\r\n            </div>\r\n          </Page>\r\n          <Page path=\"/red\">\r\n            <div className=\"page\" style={{ backgroundColor: 'red' }}>\r\n              bla1\r\n            </div>\r\n          </Page>\r\n          <Page path=\"/blue\">\r\n            <div className=\"page\" style={{ backgroundColor: 'blue' }}>\r\n              bla1\r\n            </div>\r\n          </Page>\r\n          <Page path=\"/brown\">\r\n            <div className=\"page\" style={{ backgroundColor: 'brown' }}>\r\n              bla1\r\n            </div>\r\n          </Page>\r\n        </Navigation>\r\n        \r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}